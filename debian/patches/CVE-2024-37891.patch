[Ubuntu note: test/test_retry_deprecated.py is not present
--Hlib Korzhynskyy]

Backport Of:

From 40b6d1605814dd1db0a46e202d6e56f2e4c9a468 Mon Sep 17 00:00:00 2001
From: Quentin Pradet <quentin.pradet@gmail.com>
Date: Mon, 17 Jun 2024 11:09:06 +0400
Subject: [PATCH] Merge pull request from GHSA-34jh-p97f-mpxf

* [1.26] Strip Proxy-Authorization header on redirects

* Set release date
---
 CHANGES.rst                               |  5 +++++
 src/urllib3/util/retry.py                 |  4 +++-
 test/test_retry.py                        |  6 +++++-
 test/test_retry_deprecated.py             |  6 +++++-
 test/with_dummyserver/test_poolmanager.py | 26 ++++++++++++++++++++---
 5 files changed, 41 insertions(+), 6 deletions(-)

Index: python-urllib3-1.25.8/test/test_retry.py
===================================================================
--- python-urllib3-1.25.8.orig/test/test_retry.py
+++ python-urllib3-1.25.8/test/test_retry.py
@@ -270,7 +270,11 @@ class TestRetry(object):
     def test_retry_default_remove_headers_on_redirect(self):
         retry = Retry()
 
-        assert retry.remove_headers_on_redirect == {"authorization", "cookie"}
+        assert retry.remove_headers_on_redirect == {
+            "authorization",
+            "proxy-authorization",
+            "cookie",
+        }
 
     def test_retry_set_remove_headers_on_redirect(self):
         retry = Retry(remove_headers_on_redirect=["X-API-Secret"])
Index: python-urllib3-1.25.8/test/with_dummyserver/test_poolmanager.py
===================================================================
--- python-urllib3-1.25.8.orig/test/with_dummyserver/test_poolmanager.py
+++ python-urllib3-1.25.8/test/with_dummyserver/test_poolmanager.py
@@ -135,7 +135,11 @@ class TestPoolManager(HTTPDummyServerTes
                 "GET",
                 "%s/redirect" % self.base_url,
                 fields={"target": "%s/headers" % self.base_url_alt},
-                headers={"Authorization": "foo", "Cookie": "foo=bar"},
+                headers={
+                    "Authorization": "foo",
+                    "Proxy-Authorization": "bar",
+                    "Cookie": "foo=bar",
+                },
             )
 
             assert r.status == 200
@@ -143,13 +147,18 @@ class TestPoolManager(HTTPDummyServerTes
             data = json.loads(r.data.decode("utf-8"))
 
             assert "Authorization" not in data
+            assert "Proxy-Authorization" not in data
             assert "Cookie" not in data
 
             r = http.request(
                 "GET",
                 "%s/redirect" % self.base_url,
                 fields={"target": "%s/headers" % self.base_url_alt},
-                headers={"authorization": "foo", "cookie": "foo=bar"},
+                headers={
+                    "authorization": "foo",
+                    "proxy-authorization": "baz",
+                    "cookie": "foo=bar",
+                },
             )
 
             assert r.status == 200
@@ -158,6 +167,8 @@ class TestPoolManager(HTTPDummyServerTes
 
             assert "authorization" not in data
             assert "Authorization" not in data
+            assert "proxy-authorization" not in data
+            assert "Proxy-Authorization" not in data
             assert "cookie" not in data
             assert "Cookie" not in data
 
@@ -167,7 +178,11 @@ class TestPoolManager(HTTPDummyServerTes
                 "GET",
                 "%s/redirect" % self.base_url,
                 fields={"target": "%s/headers" % self.base_url_alt},
-                headers={"Authorization": "foo", "Cookie": "foo=bar"},
+                headers={
+                    "Authorization": "foo",
+                    "Proxy-Authorization": "bar",
+                    "Cookie": "foo=bar",
+                },
                 retries=Retry(remove_headers_on_redirect=[]),
             )
 
@@ -176,6 +191,7 @@ class TestPoolManager(HTTPDummyServerTes
             data = json.loads(r.data.decode("utf-8"))
 
             assert data["Authorization"] == "foo"
+            assert data["Proxy-Authorization"] == "bar"
             assert data["Cookie"] == "foo=bar"
 
     def test_redirect_cross_host_set_removed_headers(self):
@@ -187,6 +203,7 @@ class TestPoolManager(HTTPDummyServerTes
                 headers={
                     "X-API-Secret": "foo",
                     "Authorization": "bar",
+                    "Proxy-Authorization": "baz",
                     "Cookie": "foo=bar",
                 },
                 retries=Retry(remove_headers_on_redirect=["X-API-Secret"]),
@@ -198,6 +215,7 @@ class TestPoolManager(HTTPDummyServerTes
 
             assert "X-API-Secret" not in data
             assert data["Authorization"] == "bar"
+            assert data["Proxy-Authorization"] == "baz"
             assert data["Cookie"] == "foo=bar"
 
             r = http.request(
@@ -206,6 +224,7 @@ class TestPoolManager(HTTPDummyServerTes
                 fields={"target": "%s/headers" % self.base_url_alt},
                 headers={
                     "x-api-secret": "foo",
+                    "proxy-authorization": "baz",
                     "authorization": "bar",
                     "cookie": "foo=bar",
                 },
@@ -219,6 +238,7 @@ class TestPoolManager(HTTPDummyServerTes
             assert "x-api-secret" not in data
             assert "X-API-Secret" not in data
             assert data["Authorization"] == "bar"
+            assert data["Proxy-Authorization"] == "baz"
             assert data["Cookie"] == "foo=bar"
 
     def test_303_redirect_makes_request_lose_body(self):
Index: python-urllib3-1.25.8/src/urllib3/util/retry.py
===================================================================
--- python-urllib3-1.25.8.orig/src/urllib3/util/retry.py
+++ python-urllib3-1.25.8/src/urllib3/util/retry.py
@@ -153,7 +153,9 @@ class Retry(object):
 
     RETRY_AFTER_STATUS_CODES = frozenset([413, 429, 503])
 
-    DEFAULT_REDIRECT_HEADERS_BLACKLIST = frozenset(["Cookie", "Authorization"])
+    DEFAULT_REDIRECT_HEADERS_BLACKLIST = frozenset(
+        ["Cookie", "Authorization", "Proxy-Authorization"]
+    )
 
     #: Maximum backoff time.
     BACKOFF_MAX = 120
